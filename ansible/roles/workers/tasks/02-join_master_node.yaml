---
  
  # First, we check if the nodes have been previously deployed
- name: Check if already deployed
  become: yes
  register: current_nodes
  shell: kubectl get nodes -o custom-columns=NAME:.metadata.name
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['master'] }}"

- name: Set current nodes fact
  set_fact:
    current_nodes: "{{ item.stdout_lines }}"
  loop: "{{ current_nodes.results }}"
  loop_control:
    label: "Nodos actuales"

- name: Check current nodes
  debug:
    msg: "{{ hostvars[inventory_hostname]['current_nodes'] }}"

  # Join token is created
  #https://stackoverflow.com/questions/51126164/how-do-i-find-the-join-command-for-kubeadm-on-the-master
  #https://docs.ansible.com/ansible/latest/user_guide/playbooks_delegation.html
- name: Check join token
  become: yes
  register: token_join
  shell: kubeadm token create --print-join-command
  delegate_to: "{{ item }}"
  loop: "{{ groups['master'] }}"
  when: inventory_hostname not in hostvars[inventory_hostname]['current_nodes']

  # Only if they have not been deployed, they join the master node
- name: Join master node
  become: yes
  register: result
  shell: "{{ item.stdout }}" 
  loop: "{{ token_join.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: inventory_hostname not in current_nodes

 # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/reboot_module.html#examples
- name: Reboot to apply SDN conf
  become: yes 
  reboot: 

 # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/reboot_module.html#examples
- name: Reboot to apply SDN conf
  run_once: true
  become: yes 
  reboot: 
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['master'] }}"

 # is open source proxy and load balancing server software. 
  # It provides high availability at the network and application layers,
  # improving speed and performance by distributing workload across multiple servers.
  # https://www.haproxy.com/products/haproxy-enterprise-kubernetes-ingress-controller/#:~:text=HAProxy%20Ingress%20Controller%20is%20the,Host%20header%20and%20request%20path.
- name: Wait for port 6443 to become open on the host
  wait_for:
    port: 6443
    delay: 10
  delegate_to: "{{ item }}"
  with_items:
    - "{{ groups['master'] }}"